pipeline {

   agent none

   triggers { pollSCM('H/2 * * * *') }

    stages {
        stage('Build') {
            agent {
              docker {
                image 'node:8.9-alpine'
              }
            }
            steps {
                echo 'Building..'
                dir('result'){
                  sh 'npm install'
                }
            }
        }

        stage('Test') {
            agent {
              docker {
                image 'node:8.9-alpine'
              }
            }
            steps { 
                echo 'Testing..'
                dir('result'){
                  sh 'npm install'
                  sh 'npm test'
                }
            }
        }

        stage('Sonarqube') {
            agent any 
            environment{
              sonarpath = tool 'SonarScanner'
            }
            steps {
                echo 'Running Sonarqube Analysis..'
                dir('result'){
                  withSonarQubeEnv('sonar') {
                    sh "${sonarpath}/bin/sonar-scanner -Dproject.settings=sonar-project.properties"
                  }
                }
            }
        }

        stage('Package with Docker') {
            agent any
            steps {
                echo 'Building and Publishing Docker Image'
                script {
                  docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                    def customImage = docker.build("initcron/result:${env.BRANCH_NAME}-${env.BUILD_ID}", "./result")
                    customImage.push()
                  }
                }
            }
        }
    }
}
